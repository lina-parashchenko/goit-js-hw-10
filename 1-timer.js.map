{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["const datePicker = document.getElementById(\"datetime-picker\");\nconst startButton = document.querySelector(\"[data-start]\");\nconst daysSpan = document.querySelector(\"[data-days]\");\nconst hoursSpan = document.querySelector(\"[data-hours]\");\nconst minutesSpan = document.querySelector(\"[data-minutes]\");\nconst secondsSpan = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n            iziToast.error({\n                title: \"Error\",\n                message: \"Please choose a date in the future\",\n            });\n            startButton.disabled = true;\n        } else {\n            userSelectedDate = selectedDate;\n            startButton.disabled = false;\n        }\n    },\n};\n\nflatpickr(datePicker, options);\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, \"0\");\n}\n\nfunction updateTimer() {\n    const timeRemaining = userSelectedDate - new Date();\n    if (timeRemaining <= 0) {\n        clearInterval(timerInterval);\n        datePicker.disabled = false;\n        startButton.disabled = true;\n        iziToast.success({ title: \"Done\", message: \"Countdown finished!\" });\n        return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    daysSpan.textContent = addLeadingZero(days);\n    hoursSpan.textContent = addLeadingZero(hours);\n    minutesSpan.textContent = addLeadingZero(minutes);\n    secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nstartButton.addEventListener(\"click\", () => {\n    if (!userSelectedDate) return;\n    datePicker.disabled = true;\n    startButton.disabled = true;\n    updateTimer();\n    timerInterval = setInterval(updateTimer, 1000);\n});\n"],"names":["datePicker","startButton","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","timerInterval","options","selectedDates","selectedDate","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimer","timeRemaining"],"mappings":"wFAAA,MAAMA,EAAa,SAAS,eAAe,iBAAiB,EACtDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACpB,SAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,EACDT,EAAY,SAAW,KAEvBK,EAAmBI,EACnBT,EAAY,SAAW,GAE9B,CACL,EAEA,UAAUD,EAAYQ,CAAO,EAE7B,SAASG,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASC,GAAc,CACnB,MAAMC,EAAgBd,EAAmB,IAAI,KAC7C,GAAIc,GAAiB,EAAG,CACpB,cAAcb,CAAa,EAC3BP,EAAW,SAAW,GACtBC,EAAY,SAAW,GACvB,SAAS,QAAQ,CAAE,MAAO,OAAQ,QAAS,qBAAqB,CAAE,EAClE,MACH,CACD,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUS,CAAa,EACjElB,EAAS,YAAce,EAAeJ,CAAI,EAC1CV,EAAU,YAAcc,EAAeH,CAAK,EAC5CV,EAAY,YAAca,EAAeF,CAAO,EAChDV,EAAY,YAAcY,EAAeD,CAAO,CACpD,CAEAf,EAAY,iBAAiB,QAAS,IAAM,CACnCK,IACLN,EAAW,SAAW,GACtBC,EAAY,SAAW,GACvBkB,IACAZ,EAAgB,YAAYY,EAAa,GAAI,EACjD,CAAC"}